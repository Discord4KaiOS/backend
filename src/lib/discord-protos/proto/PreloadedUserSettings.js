// @generated by protobuf-ts 2.9.3 with parameter long_type_string,output_javascript_es2015,force_optimize_code_size
// @generated from protobuf file "PreloadedUserSettings.proto" (package "discord_protos.discord_users.v1.PreloadedUserSettings", syntax proto3)
// tslint:disable
// @generated by protobuf-ts 2.9.3 with parameter long_type_string,output_javascript_es2015,force_optimize_code_size
// @generated from protobuf file "PreloadedUserSettings.proto" (package "discord_protos.discord_users.v1.PreloadedUserSettings", syntax proto3)
// tslint:disable
import { MessageType } from "@protobuf-ts/runtime";
import { Int64Value } from "./google/protobuf/wrappers";
import { Int32Value } from "./google/protobuf/wrappers";
import { UInt32Value } from "./google/protobuf/wrappers";
import { BoolValue } from "./google/protobuf/wrappers";
import { Timestamp } from "./google/protobuf/timestamp";
import { StringValue } from "./google/protobuf/wrappers";
import { UInt64Value } from "./google/protobuf/wrappers";
/**
 * @generated from protobuf enum discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxTab
 */
export var PreloadedUserSettings_InboxTab;
(function (PreloadedUserSettings_InboxTab) {
    /**
     * @generated from protobuf enum value: UNSPECIFIED = 0;
     */
    PreloadedUserSettings_InboxTab[PreloadedUserSettings_InboxTab["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * @generated from protobuf enum value: MENTIONS = 1;
     */
    PreloadedUserSettings_InboxTab[PreloadedUserSettings_InboxTab["MENTIONS"] = 1] = "MENTIONS";
    /**
     * @generated from protobuf enum value: UNREADS = 2;
     */
    PreloadedUserSettings_InboxTab[PreloadedUserSettings_InboxTab["UNREADS"] = 2] = "UNREADS";
    /**
     * @generated from protobuf enum value: TODOS = 3;
     */
    PreloadedUserSettings_InboxTab[PreloadedUserSettings_InboxTab["TODOS"] = 3] = "TODOS";
    /**
     * @generated from protobuf enum value: FOR_YOU = 4;
     */
    PreloadedUserSettings_InboxTab[PreloadedUserSettings_InboxTab["FOR_YOU"] = 4] = "FOR_YOU";
    /**
     * @generated from protobuf enum value: GAME_INVITES = 5;
     */
    PreloadedUserSettings_InboxTab[PreloadedUserSettings_InboxTab["GAME_INVITES"] = 5] = "GAME_INVITES";
})(PreloadedUserSettings_InboxTab || (PreloadedUserSettings_InboxTab = {}));
/**
 * @generated from protobuf enum discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.DmSpamFilterV2
 */
export var PreloadedUserSettings_DmSpamFilterV2;
(function (PreloadedUserSettings_DmSpamFilterV2) {
    /**
     * @generated from protobuf enum value: DEFAULT_UNSET = 0;
     */
    PreloadedUserSettings_DmSpamFilterV2[PreloadedUserSettings_DmSpamFilterV2["DEFAULT_UNSET"] = 0] = "DEFAULT_UNSET";
    /**
     * @generated from protobuf enum value: DISABLED = 1;
     */
    PreloadedUserSettings_DmSpamFilterV2[PreloadedUserSettings_DmSpamFilterV2["DISABLED"] = 1] = "DISABLED";
    /**
     * @generated from protobuf enum value: NON_FRIENDS = 2;
     */
    PreloadedUserSettings_DmSpamFilterV2[PreloadedUserSettings_DmSpamFilterV2["NON_FRIENDS"] = 2] = "NON_FRIENDS";
    /**
     * @generated from protobuf enum value: FRIENDS_AND_NON_FRIENDS = 3;
     */
    PreloadedUserSettings_DmSpamFilterV2[PreloadedUserSettings_DmSpamFilterV2["FRIENDS_AND_NON_FRIENDS"] = 3] = "FRIENDS_AND_NON_FRIENDS";
})(PreloadedUserSettings_DmSpamFilterV2 || (PreloadedUserSettings_DmSpamFilterV2 = {}));
/**
 * @generated from protobuf enum discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ExplicitContentRedaction
 */
export var PreloadedUserSettings_ExplicitContentRedaction;
(function (PreloadedUserSettings_ExplicitContentRedaction) {
    /**
     * @generated from protobuf enum value: UNSET_EXPLICIT_CONTENT_REDACTION = 0;
     */
    PreloadedUserSettings_ExplicitContentRedaction[PreloadedUserSettings_ExplicitContentRedaction["UNSET_EXPLICIT_CONTENT_REDACTION"] = 0] = "UNSET_EXPLICIT_CONTENT_REDACTION";
    /**
     * @generated from protobuf enum value: SHOW = 1;
     */
    PreloadedUserSettings_ExplicitContentRedaction[PreloadedUserSettings_ExplicitContentRedaction["SHOW"] = 1] = "SHOW";
    /**
     * @generated from protobuf enum value: BLUR = 2;
     */
    PreloadedUserSettings_ExplicitContentRedaction[PreloadedUserSettings_ExplicitContentRedaction["BLUR"] = 2] = "BLUR";
    /**
     * @generated from protobuf enum value: BLOCK = 3;
     */
    PreloadedUserSettings_ExplicitContentRedaction[PreloadedUserSettings_ExplicitContentRedaction["BLOCK"] = 3] = "BLOCK";
})(PreloadedUserSettings_ExplicitContentRedaction || (PreloadedUserSettings_ExplicitContentRedaction = {}));
/**
 * @generated from protobuf enum discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildActivityStatusRestrictionDefault
 */
export var PreloadedUserSettings_GuildActivityStatusRestrictionDefault;
(function (PreloadedUserSettings_GuildActivityStatusRestrictionDefault) {
    /**
     * @generated from protobuf enum value: OFF = 0;
     */
    PreloadedUserSettings_GuildActivityStatusRestrictionDefault[PreloadedUserSettings_GuildActivityStatusRestrictionDefault["OFF"] = 0] = "OFF";
    /**
     * @generated from protobuf enum value: ON_FOR_LARGE_GUILDS = 1;
     */
    PreloadedUserSettings_GuildActivityStatusRestrictionDefault[PreloadedUserSettings_GuildActivityStatusRestrictionDefault["ON_FOR_LARGE_GUILDS"] = 1] = "ON_FOR_LARGE_GUILDS";
})(PreloadedUserSettings_GuildActivityStatusRestrictionDefault || (PreloadedUserSettings_GuildActivityStatusRestrictionDefault = {}));
/**
 * @generated from protobuf enum discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Theme
 */
export var PreloadedUserSettings_Theme;
(function (PreloadedUserSettings_Theme) {
    /**
     * @generated from protobuf enum value: UNSET = 0;
     */
    PreloadedUserSettings_Theme[PreloadedUserSettings_Theme["UNSET"] = 0] = "UNSET";
    /**
     * @generated from protobuf enum value: DARK = 1;
     */
    PreloadedUserSettings_Theme[PreloadedUserSettings_Theme["DARK"] = 1] = "DARK";
    /**
     * @generated from protobuf enum value: LIGHT = 2;
     */
    PreloadedUserSettings_Theme[PreloadedUserSettings_Theme["LIGHT"] = 2] = "LIGHT";
})(PreloadedUserSettings_Theme || (PreloadedUserSettings_Theme = {}));
/**
 * @generated from protobuf enum discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannelType
 */
export var PreloadedUserSettings_FavoriteChannelType;
(function (PreloadedUserSettings_FavoriteChannelType) {
    /**
     * @generated from protobuf enum value: UNSET_FAVORITE_CHANNEL_TYPE = 0;
     */
    PreloadedUserSettings_FavoriteChannelType[PreloadedUserSettings_FavoriteChannelType["UNSET_FAVORITE_CHANNEL_TYPE"] = 0] = "UNSET_FAVORITE_CHANNEL_TYPE";
    /**
     * @generated from protobuf enum value: REFERENCE_ORIGINAL = 1;
     */
    PreloadedUserSettings_FavoriteChannelType[PreloadedUserSettings_FavoriteChannelType["REFERENCE_ORIGINAL"] = 1] = "REFERENCE_ORIGINAL";
    /**
     * @generated from protobuf enum value: CATEGORY = 2;
     */
    PreloadedUserSettings_FavoriteChannelType[PreloadedUserSettings_FavoriteChannelType["CATEGORY"] = 2] = "CATEGORY";
})(PreloadedUserSettings_FavoriteChannelType || (PreloadedUserSettings_FavoriteChannelType = {}));
// @generated message type with reflection information, may provide speed optimized methods
class PreloadedUserSettings$Type extends MessageType {
    constructor() {
        super("discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings", [
            { no: 1, name: "versions", kind: "message", T: () => PreloadedUserSettings_Versions },
            { no: 2, name: "inbox", kind: "message", T: () => PreloadedUserSettings_InboxSettings },
            { no: 3, name: "guilds", kind: "message", T: () => PreloadedUserSettings_AllGuildSettings },
            { no: 4, name: "user_content", kind: "message", T: () => PreloadedUserSettings_UserContentSettings },
            { no: 5, name: "voice_and_video", kind: "message", T: () => PreloadedUserSettings_VoiceAndVideoSettings },
            { no: 6, name: "text_and_images", kind: "message", T: () => PreloadedUserSettings_TextAndImagesSettings },
            { no: 7, name: "notifications", kind: "message", T: () => PreloadedUserSettings_NotificationSettings },
            { no: 8, name: "privacy", kind: "message", T: () => PreloadedUserSettings_PrivacySettings },
            { no: 9, name: "debug", kind: "message", T: () => PreloadedUserSettings_DebugSettings },
            { no: 10, name: "game_library", kind: "message", T: () => PreloadedUserSettings_GameLibrarySettings },
            { no: 11, name: "status", kind: "message", T: () => PreloadedUserSettings_StatusSettings },
            { no: 12, name: "localization", kind: "message", T: () => PreloadedUserSettings_LocalizationSettings },
            { no: 13, name: "appearance", kind: "message", T: () => PreloadedUserSettings_AppearanceSettings },
            { no: 14, name: "guild_folders", kind: "message", T: () => PreloadedUserSettings_GuildFolders },
            { no: 15, name: "favorites", kind: "message", T: () => PreloadedUserSettings_Favorites },
            { no: 16, name: "audio_context_settings", kind: "message", T: () => PreloadedUserSettings_AudioSettings },
            { no: 17, name: "communities", kind: "message", T: () => PreloadedUserSettings_CommunitiesSettings },
            { no: 18, name: "broadcast", kind: "message", T: () => PreloadedUserSettings_BroadcastSettings },
            { no: 19, name: "clips", kind: "message", T: () => PreloadedUserSettings_ClipsSettings }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
 */
export const PreloadedUserSettings = new PreloadedUserSettings$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PreloadedUserSettings_Versions$Type extends MessageType {
    constructor() {
        super("discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Versions", [
            { no: 1, name: "client_version", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "server_version", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "data_version", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Versions
 */
export const PreloadedUserSettings_Versions = new PreloadedUserSettings_Versions$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PreloadedUserSettings_InboxSettings$Type extends MessageType {
    constructor() {
        super("discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxSettings", [
            { no: 1, name: "current_tab", kind: "enum", T: () => ["discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxTab", PreloadedUserSettings_InboxTab] },
            { no: 2, name: "viewed_tutorial", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxSettings
 */
export const PreloadedUserSettings_InboxSettings = new PreloadedUserSettings_InboxSettings$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PreloadedUserSettings_ChannelIconEmoji$Type extends MessageType {
    constructor() {
        super("discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ChannelIconEmoji", [
            { no: 1, name: "id", kind: "message", T: () => UInt64Value },
            { no: 2, name: "name", kind: "message", T: () => StringValue },
            { no: 3, name: "color", kind: "message", T: () => UInt64Value }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ChannelIconEmoji
 */
export const PreloadedUserSettings_ChannelIconEmoji = new PreloadedUserSettings_ChannelIconEmoji$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PreloadedUserSettings_ChannelSettings$Type extends MessageType {
    constructor() {
        super("discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ChannelSettings", [
            { no: 1, name: "collapsed_in_inbox", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "icon_emoji", kind: "message", T: () => PreloadedUserSettings_ChannelIconEmoji }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ChannelSettings
 */
export const PreloadedUserSettings_ChannelSettings = new PreloadedUserSettings_ChannelSettings$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PreloadedUserSettings_CustomCallSound$Type extends MessageType {
    constructor() {
        super("discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CustomCallSound", [
            { no: 1, name: "sound_id", kind: "scalar", T: 6 /*ScalarType.FIXED64*/ },
            { no: 2, name: "guild_id", kind: "scalar", T: 6 /*ScalarType.FIXED64*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CustomCallSound
 */
export const PreloadedUserSettings_CustomCallSound = new PreloadedUserSettings_CustomCallSound$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PreloadedUserSettings_ChannelListSettings$Type extends MessageType {
    constructor() {
        super("discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ChannelListSettings", [
            { no: 1, name: "layout", kind: "message", T: () => StringValue },
            { no: 2, name: "message_previews", kind: "message", T: () => StringValue }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ChannelListSettings
 */
export const PreloadedUserSettings_ChannelListSettings = new PreloadedUserSettings_ChannelListSettings$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PreloadedUserSettings_GuildSettings$Type extends MessageType {
    constructor() {
        super("discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings", [
            { no: 1, name: "channels", kind: "map", K: 6 /*ScalarType.FIXED64*/, V: { kind: "message", T: () => PreloadedUserSettings_ChannelSettings } },
            { no: 2, name: "hub_progress", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "guild_onboarding_progress", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "guild_recents_dismissed_at", kind: "message", T: () => Timestamp },
            { no: 5, name: "dismissed_guild_content", kind: "scalar", T: 12 /*ScalarType.BYTES*/ },
            { no: 6, name: "join_sound", kind: "message", T: () => PreloadedUserSettings_CustomCallSound },
            { no: 7, name: "mobile_redesign_channel_list_settings", kind: "message", T: () => PreloadedUserSettings_ChannelListSettings },
            { no: 8, name: "disable_raid_alert_push", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 9, name: "disable_raid_alert_nag", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings
 */
export const PreloadedUserSettings_GuildSettings = new PreloadedUserSettings_GuildSettings$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PreloadedUserSettings_AllGuildSettings$Type extends MessageType {
    constructor() {
        super("discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AllGuildSettings", [
            { no: 1, name: "guilds", kind: "map", K: 6 /*ScalarType.FIXED64*/, V: { kind: "message", T: () => PreloadedUserSettings_GuildSettings } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AllGuildSettings
 */
export const PreloadedUserSettings_AllGuildSettings = new PreloadedUserSettings_AllGuildSettings$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PreloadedUserSettings_UserContentSettings$Type extends MessageType {
    constructor() {
        super("discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.UserContentSettings", [
            { no: 1, name: "dismissed_contents", kind: "scalar", T: 12 /*ScalarType.BYTES*/ },
            { no: 2, name: "last_dismissed_outbound_promotion_start_date", kind: "message", T: () => StringValue },
            { no: 3, name: "premium_tier_0_modal_dismissed_at", kind: "message", T: () => Timestamp },
            { no: 4, name: "guild_onboarding_upsell_dismissed_at", kind: "message", T: () => Timestamp },
            { no: 5, name: "safety_user_sentiment_notice_dismissed_at", kind: "message", T: () => Timestamp }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.UserContentSettings
 */
export const PreloadedUserSettings_UserContentSettings = new PreloadedUserSettings_UserContentSettings$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PreloadedUserSettings_VideoFilterBackgroundBlur$Type extends MessageType {
    constructor() {
        super("discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterBackgroundBlur", [
            { no: 1, name: "use_blur", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterBackgroundBlur
 */
export const PreloadedUserSettings_VideoFilterBackgroundBlur = new PreloadedUserSettings_VideoFilterBackgroundBlur$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PreloadedUserSettings_VideoFilterAsset$Type extends MessageType {
    constructor() {
        super("discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterAsset", [
            { no: 1, name: "id", kind: "scalar", T: 6 /*ScalarType.FIXED64*/ },
            { no: 2, name: "asset_hash", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterAsset
 */
export const PreloadedUserSettings_VideoFilterAsset = new PreloadedUserSettings_VideoFilterAsset$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PreloadedUserSettings_SoundboardSettings$Type extends MessageType {
    constructor() {
        super("discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.SoundboardSettings", [
            { no: 1, name: "volume", kind: "scalar", T: 2 /*ScalarType.FLOAT*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.SoundboardSettings
 */
export const PreloadedUserSettings_SoundboardSettings = new PreloadedUserSettings_SoundboardSettings$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PreloadedUserSettings_VoiceAndVideoSettings$Type extends MessageType {
    constructor() {
        super("discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings", [
            { no: 1, name: "blur", kind: "message", T: () => PreloadedUserSettings_VideoFilterBackgroundBlur },
            { no: 2, name: "preset_option", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "custom_asset", kind: "message", T: () => PreloadedUserSettings_VideoFilterAsset },
            { no: 5, name: "always_preview_video", kind: "message", T: () => BoolValue },
            { no: 6, name: "afk_timeout", kind: "message", T: () => UInt32Value },
            { no: 7, name: "stream_notifications_enabled", kind: "message", T: () => BoolValue },
            { no: 8, name: "native_phone_integration_enabled", kind: "message", T: () => BoolValue },
            { no: 9, name: "soundboard_settings", kind: "message", T: () => PreloadedUserSettings_SoundboardSettings }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings
 */
export const PreloadedUserSettings_VoiceAndVideoSettings = new PreloadedUserSettings_VoiceAndVideoSettings$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PreloadedUserSettings_ExplicitContentSettings$Type extends MessageType {
    constructor() {
        super("discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ExplicitContentSettings", [
            { no: 1, name: "explicit_content_guilds", kind: "enum", T: () => ["discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ExplicitContentRedaction", PreloadedUserSettings_ExplicitContentRedaction] },
            { no: 2, name: "explicit_content_friend_dm", kind: "enum", T: () => ["discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ExplicitContentRedaction", PreloadedUserSettings_ExplicitContentRedaction] },
            { no: 3, name: "explicit_content_non_friend_dm", kind: "enum", T: () => ["discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ExplicitContentRedaction", PreloadedUserSettings_ExplicitContentRedaction] }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ExplicitContentSettings
 */
export const PreloadedUserSettings_ExplicitContentSettings = new PreloadedUserSettings_ExplicitContentSettings$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PreloadedUserSettings_TextAndImagesSettings$Type extends MessageType {
    constructor() {
        super("discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings", [
            { no: 1, name: "diversity_surrogate", kind: "message", T: () => StringValue },
            { no: 2, name: "use_rich_chat_input", kind: "message", T: () => BoolValue },
            { no: 3, name: "use_thread_sidebar", kind: "message", T: () => BoolValue },
            { no: 4, name: "render_spoilers", kind: "message", T: () => StringValue },
            { no: 5, name: "emoji_picker_collapsed_sections", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "sticker_picker_collapsed_sections", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "view_image_descriptions", kind: "message", T: () => BoolValue },
            { no: 8, name: "show_command_suggestions", kind: "message", T: () => BoolValue },
            { no: 9, name: "inline_attachment_media", kind: "message", T: () => BoolValue },
            { no: 10, name: "inline_embed_media", kind: "message", T: () => BoolValue },
            { no: 11, name: "gif_auto_play", kind: "message", T: () => BoolValue },
            { no: 12, name: "render_embeds", kind: "message", T: () => BoolValue },
            { no: 13, name: "render_reactions", kind: "message", T: () => BoolValue },
            { no: 14, name: "animate_emoji", kind: "message", T: () => BoolValue },
            { no: 15, name: "animate_stickers", kind: "message", T: () => UInt32Value },
            { no: 16, name: "enable_tts_command", kind: "message", T: () => BoolValue },
            { no: 17, name: "message_display_compact", kind: "message", T: () => BoolValue },
            { no: 19, name: "explicit_content_filter", kind: "message", T: () => UInt32Value },
            { no: 20, name: "view_nsfw_guilds", kind: "message", T: () => BoolValue },
            { no: 21, name: "convert_emoticons", kind: "message", T: () => BoolValue },
            { no: 22, name: "expression_suggestions_enabled", kind: "message", T: () => BoolValue },
            { no: 23, name: "view_nsfw_commands", kind: "message", T: () => BoolValue },
            { no: 24, name: "use_legacy_chat_input", kind: "message", T: () => BoolValue },
            { no: 25, name: "soundboard_picker_collapsed_sections", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 26, name: "dm_spam_filter", kind: "message", T: () => UInt32Value },
            { no: 27, name: "dm_spam_filter_v2", kind: "enum", T: () => ["discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.DmSpamFilterV2", PreloadedUserSettings_DmSpamFilterV2] },
            { no: 28, name: "include_stickers_in_autocomplete", kind: "message", T: () => BoolValue },
            { no: 29, name: "explicit_content_settings", kind: "message", T: () => PreloadedUserSettings_ExplicitContentSettings }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
 */
export const PreloadedUserSettings_TextAndImagesSettings = new PreloadedUserSettings_TextAndImagesSettings$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PreloadedUserSettings_NotificationSettings$Type extends MessageType {
    constructor() {
        super("discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.NotificationSettings", [
            { no: 1, name: "show_in_app_notifications", kind: "message", T: () => BoolValue },
            { no: 2, name: "notify_friends_on_go_live", kind: "message", T: () => BoolValue },
            { no: 3, name: "notification_center_acked_before_id", kind: "scalar", T: 6 /*ScalarType.FIXED64*/ },
            { no: 4, name: "enable_burst_reaction_notifications", kind: "message", T: () => BoolValue }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.NotificationSettings
 */
export const PreloadedUserSettings_NotificationSettings = new PreloadedUserSettings_NotificationSettings$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PreloadedUserSettings_PrivacySettings$Type extends MessageType {
    constructor() {
        super("discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings", [
            { no: 1, name: "allow_activity_party_privacy_friends", kind: "message", T: () => BoolValue },
            { no: 2, name: "allow_activity_party_privacy_voice_channel", kind: "message", T: () => BoolValue },
            { no: 3, name: "restricted_guild_ids", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 6 /*ScalarType.FIXED64*/ },
            { no: 4, name: "default_guilds_restricted", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 7, name: "allow_accessibility_detection", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 8, name: "detect_platform_accounts", kind: "message", T: () => BoolValue },
            { no: 9, name: "passwordless", kind: "message", T: () => BoolValue },
            { no: 10, name: "contact_sync_enabled", kind: "message", T: () => BoolValue },
            { no: 11, name: "friend_source_flags", kind: "message", T: () => UInt32Value },
            { no: 12, name: "friend_discovery_flags", kind: "message", T: () => UInt32Value },
            { no: 13, name: "activity_restricted_guild_ids", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 6 /*ScalarType.FIXED64*/ },
            { no: 14, name: "default_guilds_activity_restricted", kind: "enum", T: () => ["discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildActivityStatusRestrictionDefault", PreloadedUserSettings_GuildActivityStatusRestrictionDefault] },
            { no: 15, name: "activity_joining_restricted_guild_ids", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 6 /*ScalarType.FIXED64*/ },
            { no: 16, name: "message_request_restricted_guild_ids", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 6 /*ScalarType.FIXED64*/ },
            { no: 17, name: "default_message_request_restricted", kind: "message", T: () => BoolValue },
            { no: 18, name: "drops_opted_out", kind: "message", T: () => BoolValue },
            { no: 19, name: "non_spam_retraining_opt_in", kind: "message", T: () => BoolValue },
            { no: 20, name: "family_center_enabled", kind: "message", T: () => BoolValue },
            { no: 21, name: "family_center_enabled_v2", kind: "message", T: () => BoolValue },
            { no: 22, name: "hide_legacy_username", kind: "message", T: () => BoolValue }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
 */
export const PreloadedUserSettings_PrivacySettings = new PreloadedUserSettings_PrivacySettings$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PreloadedUserSettings_DebugSettings$Type extends MessageType {
    constructor() {
        super("discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.DebugSettings", [
            { no: 1, name: "rtc_panel_show_voice_states", kind: "message", T: () => BoolValue }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.DebugSettings
 */
export const PreloadedUserSettings_DebugSettings = new PreloadedUserSettings_DebugSettings$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PreloadedUserSettings_GameLibrarySettings$Type extends MessageType {
    constructor() {
        super("discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings", [
            { no: 1, name: "install_shortcut_desktop", kind: "message", T: () => BoolValue },
            { no: 2, name: "install_shortcut_start_menu", kind: "message", T: () => BoolValue },
            { no: 3, name: "disable_games_tab", kind: "message", T: () => BoolValue }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings
 */
export const PreloadedUserSettings_GameLibrarySettings = new PreloadedUserSettings_GameLibrarySettings$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PreloadedUserSettings_CustomStatus$Type extends MessageType {
    constructor() {
        super("discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CustomStatus", [
            { no: 1, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "emoji_id", kind: "scalar", T: 6 /*ScalarType.FIXED64*/ },
            { no: 3, name: "emoji_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "expires_at_ms", kind: "scalar", T: 6 /*ScalarType.FIXED64*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CustomStatus
 */
export const PreloadedUserSettings_CustomStatus = new PreloadedUserSettings_CustomStatus$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PreloadedUserSettings_StatusSettings$Type extends MessageType {
    constructor() {
        super("discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings", [
            { no: 1, name: "status", kind: "message", T: () => StringValue },
            { no: 2, name: "custom_status", kind: "message", T: () => PreloadedUserSettings_CustomStatus },
            { no: 3, name: "show_current_game", kind: "message", T: () => BoolValue }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings
 */
export const PreloadedUserSettings_StatusSettings = new PreloadedUserSettings_StatusSettings$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PreloadedUserSettings_LocalizationSettings$Type extends MessageType {
    constructor() {
        super("discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.LocalizationSettings", [
            { no: 1, name: "locale", kind: "message", T: () => StringValue },
            { no: 2, name: "timezone_offset", kind: "message", T: () => Int32Value }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.LocalizationSettings
 */
export const PreloadedUserSettings_LocalizationSettings = new PreloadedUserSettings_LocalizationSettings$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PreloadedUserSettings_ClientThemeSettings$Type extends MessageType {
    constructor() {
        super("discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings", [
            { no: 2, name: "background_gradient_preset_id", kind: "message", T: () => UInt32Value }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings
 */
export const PreloadedUserSettings_ClientThemeSettings = new PreloadedUserSettings_ClientThemeSettings$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PreloadedUserSettings_AppearanceSettings$Type extends MessageType {
    constructor() {
        super("discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AppearanceSettings", [
            { no: 1, name: "theme", kind: "enum", T: () => ["discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Theme", PreloadedUserSettings_Theme] },
            { no: 2, name: "developer_mode", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "client_theme_settings", kind: "message", T: () => PreloadedUserSettings_ClientThemeSettings },
            { no: 4, name: "mobile_redesign_disabled", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 6, name: "channel_list_layout", kind: "message", T: () => StringValue },
            { no: 7, name: "message_previews", kind: "message", T: () => StringValue }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AppearanceSettings
 */
export const PreloadedUserSettings_AppearanceSettings = new PreloadedUserSettings_AppearanceSettings$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PreloadedUserSettings_GuildFolder$Type extends MessageType {
    constructor() {
        super("discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder", [
            { no: 1, name: "guild_ids", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 6 /*ScalarType.FIXED64*/ },
            { no: 2, name: "id", kind: "message", T: () => Int64Value },
            { no: 3, name: "name", kind: "message", T: () => StringValue },
            { no: 4, name: "color", kind: "message", T: () => UInt64Value }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder
 */
export const PreloadedUserSettings_GuildFolder = new PreloadedUserSettings_GuildFolder$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PreloadedUserSettings_GuildFolders$Type extends MessageType {
    constructor() {
        super("discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolders", [
            { no: 1, name: "folders", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => PreloadedUserSettings_GuildFolder },
            { no: 2, name: "guild_positions", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 6 /*ScalarType.FIXED64*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolders
 */
export const PreloadedUserSettings_GuildFolders = new PreloadedUserSettings_GuildFolders$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PreloadedUserSettings_FavoriteChannel$Type extends MessageType {
    constructor() {
        super("discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannel", [
            { no: 1, name: "nickname", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "type", kind: "enum", T: () => ["discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannelType", PreloadedUserSettings_FavoriteChannelType] },
            { no: 3, name: "position", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "parent_id", kind: "scalar", T: 6 /*ScalarType.FIXED64*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannel
 */
export const PreloadedUserSettings_FavoriteChannel = new PreloadedUserSettings_FavoriteChannel$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PreloadedUserSettings_Favorites$Type extends MessageType {
    constructor() {
        super("discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Favorites", [
            { no: 1, name: "favorite_channels", kind: "map", K: 6 /*ScalarType.FIXED64*/, V: { kind: "message", T: () => PreloadedUserSettings_FavoriteChannel } },
            { no: 2, name: "muted", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Favorites
 */
export const PreloadedUserSettings_Favorites = new PreloadedUserSettings_Favorites$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PreloadedUserSettings_AudioContextSetting$Type extends MessageType {
    constructor() {
        super("discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioContextSetting", [
            { no: 1, name: "muted", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "volume", kind: "scalar", T: 2 /*ScalarType.FLOAT*/ },
            { no: 3, name: "modified_at", kind: "scalar", T: 6 /*ScalarType.FIXED64*/ },
            { no: 4, name: "soundboard_muted", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioContextSetting
 */
export const PreloadedUserSettings_AudioContextSetting = new PreloadedUserSettings_AudioContextSetting$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PreloadedUserSettings_AudioSettings$Type extends MessageType {
    constructor() {
        super("discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioSettings", [
            { no: 1, name: "user", kind: "map", K: 6 /*ScalarType.FIXED64*/, V: { kind: "message", T: () => PreloadedUserSettings_AudioContextSetting } },
            { no: 2, name: "stream", kind: "map", K: 6 /*ScalarType.FIXED64*/, V: { kind: "message", T: () => PreloadedUserSettings_AudioContextSetting } }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioSettings
 */
export const PreloadedUserSettings_AudioSettings = new PreloadedUserSettings_AudioSettings$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PreloadedUserSettings_CommunitiesSettings$Type extends MessageType {
    constructor() {
        super("discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CommunitiesSettings", [
            { no: 1, name: "disable_home_auto_nav", kind: "message", T: () => BoolValue }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CommunitiesSettings
 */
export const PreloadedUserSettings_CommunitiesSettings = new PreloadedUserSettings_CommunitiesSettings$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PreloadedUserSettings_BroadcastSettings$Type extends MessageType {
    constructor() {
        super("discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.BroadcastSettings", [
            { no: 1, name: "allow_friends", kind: "message", T: () => BoolValue },
            { no: 2, name: "allowed_guild_ids", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 6 /*ScalarType.FIXED64*/ },
            { no: 3, name: "allowed_user_ids", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 6 /*ScalarType.FIXED64*/ },
            { no: 4, name: "auto_broadcast", kind: "message", T: () => BoolValue }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.BroadcastSettings
 */
export const PreloadedUserSettings_BroadcastSettings = new PreloadedUserSettings_BroadcastSettings$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PreloadedUserSettings_ClipsSettings$Type extends MessageType {
    constructor() {
        super("discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClipsSettings", [
            { no: 1, name: "allow_voice_recording", kind: "message", T: () => BoolValue }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClipsSettings
 */
export const PreloadedUserSettings_ClipsSettings = new PreloadedUserSettings_ClipsSettings$Type();
